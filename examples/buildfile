import libs = lyrahgames-pareto%lib{lyrahgames-pareto}
import libs += lyrahgames-gnuplot%lib{lyrahgames-gnuplot}

./: {*/ -build/}

# Kursawe
./: exe{kursawe-naive-optimization}: obj{kursawe-naive-optimization}
obj{kursawe-naive-optimization}: cxx{pareto_two_objective_optimization} $libs
{
  cxx.poptions += '-DPROBLEM=pareto::gallery::kursawe<real>'
  cxx.poptions += '-DOPTIMIZATION=pareto::naive::optimization<pareto::frontier<real>>(problem, rng, 10000000)'
}

./: exe{kursawe-nsga2-optimization}: obj{kursawe-nsga2-optimization}
obj{kursawe-nsga2-optimization}: cxx{pareto_two_objective_optimization} $libs
{
  cxx.poptions += '-DPROBLEM=pareto::gallery::kursawe<real>'
  cxx.poptions += '-DOPTIMIZATION=pareto::nsga2::optimization<pareto::frontier<real>>(problem, rng)'
}

# ZDT1
./: exe{zdt1-naive-optimization}: obj{zdt1-naive-optimization}
obj{zdt1-naive-optimization}: cxx{pareto_two_objective_optimization} $libs
{
  cxx.poptions += '-DPROBLEM=pareto::gallery::zdt1<real>'
  cxx.poptions += '-DOPTIMIZATION=pareto::naive::optimization<pareto::frontier<real>>(problem, rng, 10000000)'
}

./: exe{zdt1-nsga2-optimization}: obj{zdt1-nsga2-optimization}
obj{zdt1-nsga2-optimization}: cxx{pareto_two_objective_optimization} $libs
{
  cxx.poptions += '-DPROBLEM=pareto::gallery::zdt1<real>'
  cxx.poptions += '-DOPTIMIZATION=pareto::nsga2::optimization<pareto::frontier<real>>(problem, rng)'
}

# ZDT2
./: exe{zdt2-naive-optimization}: obj{zdt2-naive-optimization}
obj{zdt2-naive-optimization}: cxx{pareto_two_objective_optimization} $libs
{
  cxx.poptions += '-DPROBLEM=pareto::gallery::zdt2<real>'
  cxx.poptions += '-DOPTIMIZATION=pareto::naive::optimization<pareto::frontier<real>>(problem, rng, 10000000)'
}

./: exe{zdt2-nsga2-optimization}: obj{zdt2-nsga2-optimization}
obj{zdt2-nsga2-optimization}: cxx{pareto_two_objective_optimization} $libs
{
  cxx.poptions += '-DPROBLEM=pareto::gallery::zdt2<real>'
  cxx.poptions += '-DOPTIMIZATION=pareto::nsga2::optimization<pareto::frontier<real>>(problem, rng)'
}

# ZDT3
./: exe{zdt3-naive-optimization}: obj{zdt3-naive-optimization}
obj{zdt3-naive-optimization}: cxx{pareto_two_objective_optimization} $libs
{
  cxx.poptions += '-DPROBLEM=pareto::gallery::zdt3<real>'
  cxx.poptions += '-DOPTIMIZATION=pareto::naive::optimization<pareto::frontier<real>>(problem, rng, 10000000)'
}

./: exe{zdt3-nsga2-optimization}: obj{zdt3-nsga2-optimization}
obj{zdt3-nsga2-optimization}: cxx{pareto_two_objective_optimization} $libs
{
  cxx.poptions += '-DPROBLEM=pareto::gallery::zdt3<real>'
  cxx.poptions += '-DOPTIMIZATION=pareto::nsga2::optimization<pareto::frontier<real>>(problem, rng)'
}

# ZDT4
./: exe{zdt4-naive-optimization}: obj{zdt4-naive-optimization}
obj{zdt4-naive-optimization}: cxx{pareto_two_objective_optimization} $libs
{
  cxx.poptions += '-DPROBLEM=pareto::gallery::zdt4<real>'
  cxx.poptions += '-DOPTIMIZATION=pareto::naive::optimization<pareto::frontier<real>>(problem, rng, 10000000)'
}

./: exe{zdt4-nsga2-optimization}: obj{zdt4-nsga2-optimization}
obj{zdt4-nsga2-optimization}: cxx{pareto_two_objective_optimization} $libs
{
  cxx.poptions += '-DPROBLEM=pareto::gallery::zdt4<real>'
  cxx.poptions += '-DOPTIMIZATION=pareto::nsga2::optimization<pareto::frontier<real>>(problem, rng)'
}

# ZDT6
./: exe{zdt6-naive-optimization}: obj{zdt6-naive-optimization}
obj{zdt6-naive-optimization}: cxx{pareto_two_objective_optimization} $libs
{
  cxx.poptions += '-DPROBLEM=pareto::gallery::zdt6<real>'
  cxx.poptions += '-DOPTIMIZATION=pareto::naive::optimization<pareto::frontier<real>>(problem, rng, 10000000)'
}

./: exe{zdt6-nsga2-optimization}: obj{zdt6-nsga2-optimization}
obj{zdt6-nsga2-optimization}: cxx{pareto_two_objective_optimization} $libs
{
  cxx.poptions += '-DPROBLEM=pareto::gallery::zdt6<real>'
  cxx.poptions += '-DOPTIMIZATION=pareto::nsga2::optimization<pareto::frontier<real>>(problem, rng)'
}

# Fonseca-Fleming
./: exe{fonseca-fleming-naive-optimization}: obj{fonseca-fleming-naive-optimization}
obj{fonseca-fleming-naive-optimization}: cxx{pareto_two_objective_optimization} $libs
{
  cxx.poptions += '-DPROBLEM=pareto::gallery::fonseca_fleming<real>{10}'
  cxx.poptions += '-DOPTIMIZATION=pareto::naive::optimization<pareto::frontier<real>>(problem, rng, 10000000)'
}

./: exe{fonseca-fleming-nsga2-optimization}: obj{fonseca-fleming-nsga2-optimization}
obj{fonseca-fleming-nsga2-optimization}: cxx{pareto_two_objective_optimization} $libs
{
  cxx.poptions += '-DPROBLEM=pareto::gallery::fonseca_fleming<real>{10}'
  cxx.poptions += '-DOPTIMIZATION=pareto::nsga2::optimization<pareto::frontier<real>>(problem, rng)'
}

# Schaffer 1
./: exe{schaffer1-naive-optimization}: obj{schaffer1-naive-optimization}
obj{schaffer1-naive-optimization}: cxx{pareto_two_objective_optimization} $libs
{
  cxx.poptions += '-DPROBLEM=pareto::gallery::schaffer1<real>{10000}'
  cxx.poptions += '-DOPTIMIZATION=pareto::naive::optimization<pareto::frontier<real>>(problem, rng, 100000)'
}

./: exe{schaffer1-nsga2-optimization}: obj{schaffer1-nsga2-optimization}
obj{schaffer1-nsga2-optimization}: cxx{pareto_two_objective_optimization} $libs
{
  cxx.poptions += '-DPROBLEM=pareto::gallery::schaffer1<real>{10000}'
  cxx.poptions += '-DOPTIMIZATION=pareto::nsga2::optimization<pareto::frontier<real>>(problem, rng)'
}

# Schaffer 2
./: exe{schaffer2-naive-optimization}: obj{schaffer2-naive-optimization}
obj{schaffer2-naive-optimization}: cxx{pareto_two_objective_optimization} $libs
{
  cxx.poptions += '-DPROBLEM=pareto::gallery::schaffer2<real>'
  cxx.poptions += '-DOPTIMIZATION=pareto::naive::optimization<pareto::frontier<real>>(problem, rng, 10000)'
}

./: exe{schaffer2-nsga2-optimization}: obj{schaffer2-nsga2-optimization}
obj{schaffer2-nsga2-optimization}: cxx{pareto_two_objective_optimization} $libs
{
  cxx.poptions += '-DPROBLEM=pareto::gallery::schaffer2<real>'
  cxx.poptions += '-DOPTIMIZATION=pareto::nsga2::optimization<pareto::frontier<real>>(problem, rng)'
}

# Poloni
./: exe{poloni-naive-optimization}: obj{poloni-naive-optimization}
obj{poloni-naive-optimization}: cxx{pareto_two_objective_optimization} $libs
{
  cxx.poptions += '-DPROBLEM=pareto::gallery::poloni<real>'
  cxx.poptions += '-DOPTIMIZATION=pareto::naive::optimization<pareto::frontier<real>>(problem, rng, 10000)'
}

./: exe{poloni-nsga2-optimization}: obj{poloni-nsga2-optimization}
obj{poloni-nsga2-optimization}: cxx{pareto_two_objective_optimization} $libs
{
  cxx.poptions += '-DPROBLEM=pareto::gallery::poloni<real>'
  cxx.poptions += '-DOPTIMIZATION=pareto::nsga2::optimization<pareto::frontier<real>>(problem, rng)'
}
